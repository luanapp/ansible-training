- name: Create security group
  local_action:
    module: ec2_group
    name: "{{ ec2_sg_name }}"
    description: "Provides SSH universal access"
    profile: "{{ ec2_profile }}"
    region: "{{ ec2_region }}"

    rules:
    - proto: tcp
      from_port: 22
      to_port: 22
      cidr_ip: 0.0.0.0/0
      rule_desc: SSH

    - proto: tcp
      from_port: 6443
      to_port: 6443
      cidr_ip: 0.0.0.0/0
      rule_desc: kube-api-server

    - proto: tcp
      from_port: 10252
      to_port: 10252
      cidr_ip: 0.0.0.0/0
      rule_desc: kube-controller-manager

    - proto: tcp
      from_port: 10255
      to_port: 10255
      cidr_ip: 0.0.0.0/0
      rule_desc: Kubelet API Read only

    - proto: tcp
      from_port: 30000
      to_port: 32767
      cidr_ip: 0.0.0.0/0
      rule_desc: NodePort Services

    - proto: tcp
      from_port: 6783
      to_port: 6783
      cidr_ip: 0.0.0.0/0
      rule_desc: WeaveNet

    - proto: udp
      from_port: 6783
      to_port: 6783
      cidr_ip: 0.0.0.0/0
      rule_desc: WeaveNet

    - proto: udp
      from_port: 6784
      to_port: 6784
      cidr_ip: 0.0.0.0/0
      rule_desc: WeaveNet

    - proto: tcp
      from_port: 32222
      to_port: 32222
      cidr_ip: 0.0.0.0/0
      rule_desc: Giropops

    - proto: tcp
      from_port: 32111
      to_port: 32111
      cidr_ip: 0.0.0.0/0
      rule_desc: GiropopsPrometheus

    rules_egress:
    - proto: all
      cidr_ip: 0.0.0.0/0

  register: basic_firewall

- name: Create EC2 instance
  local_action:
    module: ec2
    group: "{{ ec2_sg_name }}"
    instance_type: "{{ ec2_instance_type }}"
    image: "{{ ec2_image }}"
    profile: "{{ ec2_profile }}"
    wait: true
    region: "{{ ec2_region }}"
    keypair: "{{ ec2_keypair }}"
    count: "{{ ec2_count }}"
  register: ec2

- name: Add instances public IPs to kubernetes inventory
  add_host:
    hostname: "{{ item.public_ip }}"
    groups: kubernetes_public
  with_items: "{{ ec2.instances }}"

- name: Add instances private IPs to kubernetes inventory
  add_host:
    hostname: "{{ item.private_ip }}"
    groups: kubernetes_private
  with_items: "{{ ec2.instances }}"

- name: Wait SSH
  local_action:
    module: wait_for
    host: "{{ item.public_ip }}"
    port: 22
    state: started
  with_items: "{{ ec2.instances }}"

- name: Add k8s main node tags
  local_action:
    module: ec2_tag
    resource: "{{ ec2.instances[0].id }}"
    region: "{{ ec2_region }}"
    profile: "{{ ec2_profile }}"
    state: present
  with_indexed_items: "{{ ec2.instances }}"
  args:
    tags:
      Name: k8s-main

- name: Add workers nodes tags
  local_action:
    module: ec2_tag
    resource: "{{ item.1.id }}"
    region: "{{ ec2_region }}"
    profile: "{{ ec2_profile }}"
    state: present
  with_indexed_items: "{{ ec2.instances }}"
  args:
    tags:
      Name: k8s-worker-{{ item.1.ami_launch_index }}
  when: item.0 > 0
